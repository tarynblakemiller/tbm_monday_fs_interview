import pkg from "pg";
const { Pool } = pkg;
import dotenv from "dotenv";

dotenv.config();

const pool = new Pool({
  host: process.env.DB_HOST || "localhost",
  port: Number(process.env.DB_PORT) || 5432,
  username: process.env.DB_USER || "postgres",
  password: process.env.DB_PASSWORD || "your_password",
  database: process.env.DB_NAME || "fragrance_db",
});

const seedFragrances = `
  -- The fragrance_id will be auto-generated by the trigger function
  INSERT INTO fragrances (name, description, category, image_url) VALUES
  ('Vanilla Dreams', 'A warm and sweet vanilla fragrance with hints of amber and musk', 'Oriental', 'https://example.com/images/vanilla-dreams.jpg'),
  ('Ocean Breeze', 'Fresh aquatic scent with notes of sea salt and coastal flowers', 'Marine', 'https://example.com/images/ocean-breeze.jpg'),
  ('Forest Pine', 'Woody fragrance featuring pine needles and cedar', 'Woody', 'https://example.com/images/forest-pine.jpg'),
  ('Lavender Fields', 'Calming lavender blend with bergamot and chamomile', 'Floral', 'https://example.com/images/lavender-fields.jpg'),
  ('Citrus Burst', 'Energizing blend of lemon, orange, and grapefruit', 'Citrus', 'https://example.com/images/citrus-burst.jpg'),
  ('Rose Garden', 'Classic rose fragrance with jasmine and peony notes', 'Floral', 'https://example.com/images/rose-garden.jpg'),
  ('Oud Wood', 'Rich and exotic with notes of oud, sandalwood, and vanilla', 'Woody', 'https://example.com/images/oud-wood.jpg'),
  ('Fresh Linen', 'Clean and fresh scent reminiscent of newly washed linens', 'Fresh', 'https://example.com/images/fresh-linen.jpg'),
  ('Spice Market', 'Warm blend of cinnamon, cardamom, and clove', 'Spicy', 'https://example.com/images/spice-market.jpg'),
  ('Green Tea', 'Light and refreshing with notes of green tea and jasmine', 'Fresh', 'https://example.com/images/green-tea.jpg');
`;

const seedDatabase = async () => {
  try {
    await pool.query("DELETE FROM fragrances");

    await pool.query(seedFragrances);

    console.log("Database seeded successfully");
  } catch (err) {
    console.error("Error seeding database:", err);
  } finally {
    await pool.end();
  }
};

seedDatabase();
